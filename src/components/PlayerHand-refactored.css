/* Player Hand Styles - Refactored without !important */

/* Player hand wrapper base styles */
.player-hand-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Card container base styles */
.player-hand-wrapper .card-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

/* HUMAN PLAYER (SOUTH) - Fan layout */
.player-hand-wrapper[data-position="south"] .card-container {
  width: calc(var(--card-base-width) * var(--card-size-human) * 8 * var(--card-spacing-factor));
  height: calc(var(--card-base-height) * var(--card-size-human) + 50px);
  padding-bottom: 2rem;
}

/* South player card slots */
.player-hand-wrapper[data-position="south"] .card-slot {
  position: absolute;
  left: 50%;
  bottom: 0;
  transform-origin: center bottom;
  transition: all var(--card-transition-duration) ease-out;
  width: calc(var(--card-base-width) * var(--card-size-human));
  height: calc(var(--card-base-height) * var(--card-size-human));
  z-index: calc(var(--card-index, 0) + var(--z-card-base));
}

/* Fan positioning for each card */
.player-hand-wrapper[data-position="south"] .card-slot:nth-child(1) {
  transform: translateX(-50%) translateX(calc(-3.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-12deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(2) {
  transform: translateX(-50%) translateX(calc(-2.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-8deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(3) {
  transform: translateX(-50%) translateX(calc(-1.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-4deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(4) {
  transform: translateX(-50%) translateX(calc(-0.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-1deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(5) {
  transform: translateX(-50%) translateX(calc(0.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(1deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(6) {
  transform: translateX(-50%) translateX(calc(1.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(4deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(7) {
  transform: translateX(-50%) translateX(calc(2.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(8deg);
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(8) {
  transform: translateX(-50%) translateX(calc(3.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(12deg);
}

/* Hover states with higher z-index */
.player-hand-wrapper[data-position="south"] .card-slot:hover {
  z-index: var(--z-card-hover);
}

/* Hover transform for each card */
.player-hand-wrapper[data-position="south"] .card-slot:nth-child(1):hover {
  transform: translateX(-50%) translateX(calc(-3.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-12deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(2):hover {
  transform: translateX(-50%) translateX(calc(-2.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-8deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(3):hover {
  transform: translateX(-50%) translateX(calc(-1.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-4deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(4):hover {
  transform: translateX(-50%) translateX(calc(-0.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(-1deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(5):hover {
  transform: translateX(-50%) translateX(calc(0.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(1deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(6):hover {
  transform: translateX(-50%) translateX(calc(1.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(4deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(7):hover {
  transform: translateX(-50%) translateX(calc(2.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(8deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

.player-hand-wrapper[data-position="south"] .card-slot:nth-child(8):hover {
  transform: translateX(-50%) translateX(calc(3.5 * var(--card-base-width) * var(--card-size-human) * var(--card-spacing-factor))) rotate(12deg) translateY(var(--card-hover-lift)) scale(var(--card-hover-scale));
}

/* AI PLAYERS - Compact overlap layout */
/* North player */
.player-hand-wrapper[data-position="north"] .card-container {
  width: calc(var(--card-base-width) * var(--card-size-ai) * 4);
  height: calc(var(--card-base-height) * var(--card-size-ai));
}

.player-hand-wrapper[data-position="north"] .card-slot {
  position: absolute;
  left: 50%;
  top: 50%;
  transform-origin: center center;
  transition: all var(--card-transition-duration) ease-out;
  width: calc(var(--card-base-width) * var(--card-size-ai));
  height: calc(var(--card-base-height) * var(--card-size-ai));
  z-index: calc(var(--card-index, 0) + var(--z-card-base));
}

/* North player card positioning */
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(1) { transform: translate(-50%, -50%) translateX(calc(-3.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(2) { transform: translate(-50%, -50%) translateX(calc(-2.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(3) { transform: translate(-50%, -50%) translateX(calc(-1.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(4) { transform: translate(-50%, -50%) translateX(calc(-0.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(5) { transform: translate(-50%, -50%) translateX(calc(0.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(6) { transform: translate(-50%, -50%) translateX(calc(1.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(7) { transform: translate(-50%, -50%) translateX(calc(2.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }
.player-hand-wrapper[data-position="north"] .card-slot:nth-child(8) { transform: translate(-50%, -50%) translateX(calc(3.5 * var(--card-base-width) * var(--card-size-ai) * 0.4)); }

/* East player */
.player-hand-wrapper[data-position="east"] .card-container {
  width: calc(var(--card-base-height) * var(--card-size-ai) * 3);
  height: calc(var(--card-base-width) * var(--card-size-ai));
  flex-direction: column;
}

.player-hand-wrapper[data-position="east"] .card-slot {
  position: absolute;
  left: 50%;
  top: 50%;
  transform-origin: center center;
  transition: all var(--card-transition-duration) ease-out;
  width: calc(var(--card-base-width) * var(--card-size-ai));
  height: calc(var(--card-base-height) * var(--card-size-ai));
  z-index: calc(var(--card-index, 0) + var(--z-card-base));
}

/* East player card positioning (rotated 90deg) */
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(1) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(-3.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(2) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(-2.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(3) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(-1.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(4) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(-0.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(5) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(0.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(6) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(1.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(7) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(2.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="east"] .card-slot:nth-child(8) { transform: translate(-50%, -50%) rotate(90deg) translateX(calc(3.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }

/* West player */
.player-hand-wrapper[data-position="west"] .card-container {
  width: calc(var(--card-base-height) * var(--card-size-ai) * 3);
  height: calc(var(--card-base-width) * var(--card-size-ai));
  flex-direction: column;
}

.player-hand-wrapper[data-position="west"] .card-slot {
  position: absolute;
  left: 50%;
  top: 50%;
  transform-origin: center center;
  transition: all var(--card-transition-duration) ease-out;
  width: calc(var(--card-base-width) * var(--card-size-ai));
  height: calc(var(--card-base-height) * var(--card-size-ai));
  z-index: calc(var(--card-index, 0) + var(--z-card-base));
}

/* West player card positioning (rotated -90deg, reversed order) */
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(1) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(3.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(2) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(2.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(3) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(1.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(4) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(0.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(5) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(-0.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(6) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(-1.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(7) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(-2.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }
.player-hand-wrapper[data-position="west"] .card-slot:nth-child(8) { transform: translate(-50%, -50%) rotate(-90deg) translateX(calc(-3.5 * var(--card-base-height) * var(--card-size-ai) * 0.3)); }

/* Z-index management */
.card-slot {
  z-index: calc(var(--card-index, 0) + var(--z-card-base));
}

.card-slot.selected,
.card-slot.playable {
  z-index: var(--z-card-selected);
}

.card-slot:hover {
  z-index: var(--z-card-hover);
}

/* Responsive card sizing using CSS variables */
.player-hand-wrapper {
  --card-width-base: calc(120px * var(--card-size-human, 1));
  --card-height-base: calc(168px * var(--card-size-human, 1));
}

.player-hand-wrapper[data-position="north"],
.player-hand-wrapper[data-position="east"],
.player-hand-wrapper[data-position="west"] {
  --card-width-base: calc(120px * var(--card-size-ai, 1));
  --card-height-base: calc(168px * var(--card-size-ai, 1));
}

/* Card inside slot must fill the slot */
.card-slot .game-card {
  width: 100%;
  height: 100%;
  position: relative;
}

/* Hover states remain consistent for all positions */
.player-hand-wrapper[data-hovering="true"] .card-slot {
  transition: all 0.15s ease-out;
}