/* Variables now in tokens.css */

/* Main game grid layout - Responsive First */
.game-table-grid {
  display: grid;
  width: 100vw;
  height: calc(100vh - var(--header-height, 5rem));
  overflow: visible;
  position: relative;
  isolation: isolate; /* Create new stacking context */
  
  /* Apply safe area insets */
  padding-top: var(--safe-area-inset-top);
  padding-right: var(--safe-area-inset-right);
  padding-bottom: var(--safe-area-inset-bottom);
  padding-left: var(--safe-area-inset-left);
  
  /* Responsive grid with fr units for flexibility */
  grid-template-columns: 
    [west-start] minmax(0, 1fr)
    [center-start] minmax(0, 2fr)
    [east-start] minmax(0, 1fr)
    [east-end];
    
  grid-template-rows: 
    [north-start] minmax(0, 1fr)
    [center-start] minmax(0, 2fr)
    [south-start] minmax(0, 1fr)
    [south-end];
    
  grid-template-areas:
    ". north ."
    "west center east"
    ". south .";
    
  /* Prevent grid blowout */
  min-height: 0;
  min-width: 0;
  
  /* Fluid gap sizing */
  gap: clamp(0.5rem, 2vw, 2rem);
}

/* Player area assignments */
.player-area-north { 
  grid-area: north;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding: clamp(0.5rem, 2vw, 1.5rem);
  overflow: visible;
  z-index: calc(var(--z-card-base) + 10);
  position: relative;
  /* Allow content to determine size */
  width: auto;
  height: auto;
  /* Add proper containment */
  contain: layout style;
}

.player-area-east { 
  grid-area: east;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding: clamp(0.5rem, 2vw, 1.5rem);
  overflow: visible;
  z-index: calc(var(--z-card-base) + 10);
  position: relative;
  width: auto;
  height: auto;
  contain: layout style;
}

.player-area-south { 
  grid-area: south;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  padding: clamp(0.5rem, 2vw, 1.5rem);
  overflow: visible;
  z-index: calc(var(--z-card-base) + 15);
  position: relative;
  width: auto;
  height: auto;
  contain: layout style;
}

.player-area-west { 
  grid-area: west;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: clamp(0.5rem, 2vw, 1.5rem);
  overflow: visible;
  z-index: calc(var(--z-card-base) + 10);
  position: relative;
  width: auto;
  height: auto;
  contain: layout style;
}

.game-center { 
  grid-area: center;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: var(--z-base);
}

/* Base mobile layout - single column for very small screens */
@media (max-width: 640px) {
  .game-table-grid {
    grid-template-columns: 1fr;
    grid-template-rows: 
      minmax(0, auto)
      minmax(0, 1fr)
      minmax(0, auto);
      
    grid-template-areas:
      "north"
      "center"
      "south";
      
    gap: clamp(0.25rem, 1vw, 0.5rem);
  }
  
  /* Hide side players on very small screens */
  .player-area-east,
  .player-area-west {
    display: none;
  }
}

/* Small tablets and large phones */
@media (min-width: 641px) and (max-width: 768px) {
  .game-table-grid {
    grid-template-columns: 
      minmax(0, 0.5fr)
      minmax(0, 3fr)
      minmax(0, 0.5fr);
      
    grid-template-rows: 
      minmax(0, 0.75fr)
      minmax(0, 2fr)
      minmax(0, 1fr);
  }
}

/* Tablets and small laptops */
@media (min-width: 769px) and (max-width: 1024px) {
  .game-table-grid {
    grid-template-columns: 
      minmax(0, 0.75fr)
      minmax(0, 2.5fr)
      minmax(0, 0.75fr);
      
    grid-template-rows: 
      minmax(0, 0.8fr)
      minmax(0, 2fr)
      minmax(0, 1fr);
  }
}

/* Standard desktop */
@media (min-width: 1025px) and (max-width: 1440px) {
  .game-table-grid {
    grid-template-columns: 
      minmax(0, 1fr)
      minmax(0, 2.5fr)
      minmax(0, 1fr);
  }
}

/* Large desktop */
@media (min-width: 1441px) and (max-width: 1920px) {
  .game-table-grid {
    grid-template-columns: 
      minmax(clamp(12rem, 15vw, 18rem), 1fr)
      minmax(0, 3fr)
      minmax(clamp(12rem, 15vw, 18rem), 1fr);
      
    grid-template-rows: 
      minmax(clamp(8rem, 20vh, 12rem), 1fr)
      minmax(0, 2.5fr)
      minmax(clamp(8rem, 20vh, 12rem), 1fr);
  }
}

/* Ultra-wide screens */
@media (min-width: 1921px) {
  .game-table-grid {
    grid-template-columns: 
      minmax(clamp(15rem, 12vw, 20rem), 1fr)
      minmax(0, 4fr)
      minmax(clamp(15rem, 12vw, 20rem), 1fr);
  }
}

/* Landscape orientation adjustments */
@media (orientation: landscape) and (max-height: 600px) {
  .game-table-grid {
    grid-template-rows: 
      minmax(0, 0.6fr)
      minmax(0, 2fr)
      minmax(0, 0.8fr);
  }
}